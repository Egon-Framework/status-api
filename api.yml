openapi: 3.0.3
info:
  title: Egon Status API
  description: |-
    API specification for monitoring the Egon Framework.
    
    For more information, checkout the source code [on GitHub](https://github.com/Egon-Framework/status-api)
  version: 0.0.1
tags:
  - name: metrics
    description: Metadata and status information for currently running pipeline components
paths:
  /pipeline/{pipelineId}:
    get:
      tags:
        - metrics
      summary: Return pipeline metadata by pipeline ID
      description: Returns information for a currently running pipeline
      operationId: getPipelineById
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline ID to return data for
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
              examples:
                etl:
                  summary: A generic ETL Pipeline
                  value:
                    id: "0x7f50239539d0"
                    name: ETL Pipeline
                    nodes: [
                      { id: "0x7f5023953990", name: Extract },
                      { id: "0x7f50239539b0", name: Transform },
                      { id: "0x7f502385e910", name: Load },
                    ]
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A running pipeline was not found with the given ID
  /node/{nodeID}:
    get:
      tags:
        - metrics
      summary: Return node metadata by node ID
      description: Returns information for a single pipeline node
      operationId: getNodeById
      parameters:
        - name: nodeID
          in: path
          description: Node ID to return data for
          required: true
          schema:
            type: integer
            format: int
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    Pipeline:
      required:
        - id
        - name
        - nodes
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Node'
    Node:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: query
      name: token
# Require auth token for all transactions
security:
  - TokenAuth: [ ]
